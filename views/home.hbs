
<style>
    *{
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }

    h2{
    font-size: 18px;
    padding: 10px 20px;
    color: #575ed8;
    }

    #mario-chat{
    max-width: 600px;
    margin: 30px auto;
    border: 3px solid dodgerblue;
    border-top: 10px solid dodgerblue;
    /* border-bottom: 7px solid dodgerblue; */
    box-shadow: 0px 0px 10px gray;
    border-radius: 8px;
    /* background-color: rgb(202, 252, 210); */

    }

    #chat-window{
    height: 400px;
    overflow: auto;
    background: #e9fdff;
    }

    #output p{
    padding: 14px 0px;
    margin: 0 20px;
    border-bottom: 1px solid #e9e9e9;
    color: #555;
    }

    #feedback p{
    color: #aaa;
    padding: 14px 0px;
    margin: 0 20px;
    }

    #output strong{
    color: #575ed8;
    }

    label{
    box-sizing: border-box;
    display: block;
    padding: 10px 20px;
    }

    input{
    padding: 10px 20px;
    box-sizing: border-box;
    background: #eee;
    border: 0;
    display: block;
    width: 100%;
    background: #fff;
    border-bottom: 1px solid #eee;
    font-size: 16px;
    }

    .setName{
        text-align: left;
        padding-left: 20px;
        margin-top: 10px;
        line-height: 10px;
        height: 100%;
    }

    button{
    background: #ff9a02;
    color: #fff;
    font-size: 20px;
    border: 0;
    padding: 12px 0;
    width: 100%;
    border-radius:0px 0px 7px 7px;
    font-weight: bold

    }
</style>
        
      

<body style="background-color: rgb(25, 227, 253);">

    <header class="d-flex justify-content-between" style="text-align: center;
text-shadow: 1px 1px #ffffff; background-color: #ffffff; box-shadow: 1px 0px 7px gray; padding: 0px 20px">
    <h3 style="color: #563D7C">ConnectBird</h3>
    <h4 style="cursor:pointer; color: rgb(2, 135, 175)" id="logout">Logout</h4>
    </header>

    <div id="mario-chat">
        <p class="setName" id="handle"></p>
        <div id="chat-window">
            <div id="output"></div>
            <div id="feedback"></div>
        </div>

        {{!-- <input type="text" placeholder="Your Name" id="handle"> --}}
        <input type="text" placeholder="Write Message..." id="message">
        <button type="submit" id="send">Send</button>
        
    </div>


{{!-- script for communication --}}
<script>

    document.getElementById('logout').addEventListener('click', ()=>{
        localStorage.removeItem('userName');
        location.href= '/loginUser'
    })

    // Set default name:
   let defName = localStorage.getItem('userName');
    if(defName == null)
    {
        location.href = '/loginUser';
    }
    document.getElementById('handle').innerHTML = defName.toUpperCase();

    // Task: to redirect the app, if user is not available.
//MAKE CONNECTION
const socket = io.connect('http://localhost:5555'); //Front-End socket:

var message = document.getElementById('message'),
handle = document.getElementById('handle').textContent,
btn = document.getElementById('send'),
output = document.getElementById('output'),
feedback = document.getElementById('feedback');

btn.addEventListener('click',()=>{
    socket.emit('chat', {
        message: message.value,
        handle: handle
    })
})

//Typing event
message.addEventListener('keypress',()=>{
    socket.emit('Typing...', handle.value)
}) 

//Listen for event:
socket.on('chat', (data)=>{
    feedback.innerHTML = '';
    output.innerHTML += '<p><strong> ' + data.handle +  ': </strong>'+ data.message + '</p>';
    handle.value = '';
    message.value = '';
})

socket.on('Typing...', (data)=>{
    // feedback.innerHTML = '<p><em>' + data + ' is typing a message...</em></p>';    
    feedback.innerHTML = '<p><em><strong>' + data + '</strong> is typing... </em></p>'; 

})
</script>
     
     
</body>